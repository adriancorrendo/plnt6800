{
  "hash": "d4aa2205280aba69c928a2d31388befb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data Viz I\"\nauthor: \"Dr. Adrian Correndo\"\ndate: \"2025-01-31\"\ncategories: [figures, graphics, plots, ggplot2, tidyverse]\nformat:\n  html:\n    toc: true\n    toc-location: left\n    toc-depth: 4\n    number-sections: true\n    table-class: \"table table-striped table-hover\"\n  pdf:\n    number-sections: true\neditor: source\nsmooth-scroll: true\nbibliography: ../../references.bib\nlink-citations: TRUE\n---\n\n\n\n\n\n\n**Description** <br/>\n\nIn this class, we will explore advanced visualization techniques using `ggplot2`. You'll learn how to fine-tune plots by modifying shapes, lines, legends, and adding custom titles and annotations. We will continue working with the **`agridat::lasrosas.corn`** dataset.\n\n![](https://ggplot2.tidyverse.org/logo.png){.absolute top=0 right=0 height=\"25%\"}\n\n# Learning Objectives\n\nBy the end of this session, you will: 1. Customize plot aesthetics, including point shapes, line types, and colors. 2. Modify legends and axis labels for better readability. 3. Use annotations and text elements to highlight key data points. 4. Adjust themes and layouts for professional presentation.\n\n**Required Packages** <br/>\n\nInstall the necessary packages for this class:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(pacman)\np_load(\"ggplot2\", \"gganimate\", \"agridat\", \"patchwork\", \"sf\", \"ggtext\", \"dplyr\")\n```\n:::\n\n\n\n\n\n\n# Datasets: Las Rosas Corn Data\n\nWe’ll use the **`agridat::lasrosas.corn`** dataset, focusing on yield, nitro levels, years, and spatial data.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncorn_data <- agridat::lasrosas.corn %>% \n  mutate(Year = as.factor(year))\n\nglimpse(corn_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 3,443\nColumns: 10\n$ year  <int> 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999…\n$ lat   <dbl> -33.05113, -33.05115, -33.05116, -33.05117, -33.05118, -33.05120…\n$ long  <dbl> -63.84886, -63.84879, -63.84872, -63.84865, -63.84858, -63.84851…\n$ yield <dbl> 72.14, 73.79, 77.25, 76.35, 75.55, 70.24, 76.17, 69.17, 69.77, 6…\n$ nitro <dbl> 131.5, 131.5, 131.5, 131.5, 131.5, 131.5, 131.5, 131.5, 131.5, 1…\n$ topo  <fct> W, W, W, W, W, W, W, W, W, W, W, W, W, W, W, W, W, W, W, W, W, W…\n$ bv    <dbl> 162.60, 170.49, 168.39, 176.68, 171.46, 170.56, 172.94, 171.86, …\n$ rep   <fct> R1, R1, R1, R1, R1, R1, R1, R1, R1, R1, R1, R1, R1, R1, R1, R1, …\n$ nf    <fct> N5, N5, N5, N5, N5, N5, N5, N5, N5, N5, N5, N5, N5, N5, N5, N5, …\n$ Year  <fct> 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999…\n```\n\n\n:::\n\n```{.r .cell-code}\nnass_soybean <- agridat::nass.soybean %>% \n  mutate(Year = as.factor(year))\n\nselect_states <- c(\"Kansas\", \"Iowa\", \"Illinois\", \"Missouri\")\n\nglimpse(nass_soybean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 2,528\nColumns: 5\n$ year  <int> 1924, 1924, 1924, 1924, 1924, 1924, 1924, 1924, 1924, 1924, 1924…\n$ state <fct> Alabama, Arkansas, Delaware, Georgia, Illinois, Indiana, Iowa, K…\n$ acres <dbl> 3000, 3000, 12000, 10000, 115000, 66000, 10000, 2000, 9000, 8000…\n$ yield <dbl> 6.5, 6.5, 11.0, 5.5, 12.0, 9.9, 12.0, 11.0, 9.5, 8.0, 11.8, 13.0…\n$ Year  <fct> 1924, 1924, 1924, 1924, 1924, 1924, 1924, 1924, 1924, 1924, 1924…\n```\n\n\n:::\n:::\n\n\n\n\n\n\n# 1. Customizing ggplot2 Visualizations\n\n## Define custom palettes\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_colors <- c(\"#1e6091\", \"#f9c74f\", \"#9b2226\",  \"#599999\",  \"#8e5572\")\n```\n:::\n\n\n\n\n\n\n## Histogram with Adjusted Transparency and Custom Bins\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Density\ndensity_01 <- \ncorn_data %>% \nggplot(aes(x = yield)) +\n  geom_density(aes(fill = Year), color = \"grey15\", alpha = 0.5)+\n  labs(title = \"Yield Distribution Across Years\", x = \"Yield (qq/ha)\", y = \"Count\") +\n  scale_fill_manual(values = my_colors)+\n  theme_classic()\n\n# Histogram\nhisto_01 <-\nggplot(corn_data, aes(x = yield)) +\n  geom_histogram(aes(fill = Year), bins = 20, alpha = 0.6, color = \"black\") +\n  labs(title = \"Yield Distribution Across Years\", x = \"Yield (qq/ha)\", y = \"Count\") +\n  scale_fill_manual(values = my_colors)+\n  geom_rug(aes(color = Year), alpha = 0.5)+\n  scale_color_manual(values = my_colors)+\n  theme_classic()\n\nhisto_01\n```\n\n::: {.cell-output-display}\n![](07_ggplot2_intro_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Faceting by Year\nhisto_02 <-\ncorn_data %>% \nggplot(aes(x = yield)) +\n  geom_histogram(aes(fill = Year), bins = 30, alpha = 0.6, color = \"black\") +\n  labs(title = \"Yield Distribution Across Years\", x = \"Yield (qq/ha)\", y = \"Count\") +\n  scale_fill_manual(values = my_colors)+\n  geom_rug(aes(color = topo), alpha = 0.5)+\n  scale_color_manual(values = my_colors)+\n  facet_wrap(~topo)+\n  theme_classic()+\n  theme(legend.position = \"none\")\nhisto_02\n```\n\n::: {.cell-output-display}\n![](07_ggplot2_intro_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n\n```{.r .cell-code}\ncorn_data %>% \nggplot(aes(x = yield)) +\n  geom_histogram(aes(fill = topo), bins = 20, alpha = 0.6, color = \"black\") +\n  labs(title = \"Yield Distribution Across Years\", x = \"Yield (qq/ha)\", y = \"Count\") +\n  scale_fill_manual(values = my_colors)+\n  geom_rug(aes(color = topo), alpha = 0.5)+\n  scale_color_manual(values = my_colors)+\n  facet_wrap(~topo)+\n  theme_classic()+\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](07_ggplot2_intro_files/figure-html/unnamed-chunk-4-3.png){width=672}\n:::\n:::\n\n\n\n\n\n\n## Column/Bar plot\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Prepare summarized data frame\naggregated_corn <- corn_data %>% group_by(Year, year, nitro, nf) %>% \n  summarize(yield_mean = mean(yield),\n            sd_yield = sd(yield))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'Year', 'year', 'nitro'. You can override\nusing the `.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Column plot\ncolplot_01 <- \n  aggregated_corn %>% \nggplot() +\n  geom_col(aes(x = nf, y = yield_mean, fill = Year), \n           color = \"grey25\") + # Triangle shape\n  scale_fill_manual(values = my_colors)+\n  labs(title = \"Yield vs. Nitrogen Levels\", x = \"Nitrogen (kg/ha)\", y = \"Yield (qq/ha)\") +\n  facet_wrap(~Year)+\n  theme_classic()\n\ncolplot_01\n```\n\n::: {.cell-output-display}\n![](07_ggplot2_intro_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Add SD bars\ncolplot_02 <-\ncolplot_01 +\n  geom_errorbar(data = aggregated_corn, \n                aes(ymin = yield_mean - sd_yield,\n                    ymax = yield_mean + sd_yield, \n                    x = nf),\n                width = .25)\n  \n\ncolplot_02\n```\n\n::: {.cell-output-display}\n![](07_ggplot2_intro_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# facet by topography\naggregated_topo <- corn_data %>% group_by(Year, year, nitro, nf, topo) %>% \n  summarize(yield_mean = mean(yield),\n            sd_yield = sd(yield))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'Year', 'year', 'nitro', 'nf'. You can\noverride using the `.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\n# dacet by topography and Year\ncolplot_03 <- \naggregated_topo %>% \nggplot() +\n  geom_col(aes(x = nf, y = yield_mean, fill = topo), \n           color = \"grey25\", alpha = 0.5) + # Triangle shape\n  geom_errorbar(aes(ymin = yield_mean - sd_yield,\n                    ymax = yield_mean + sd_yield, x = nf),\n                width = .25)+\n  labs(title = \"Yield vs. Nitrogen Levels\", x = \"Nitrogen (kg/ha)\", y = \"Yield (qq/ha)\") +\n  facet_grid(topo~Year)+\n  scale_fill_manual(values = my_colors)+\n  theme_classic()\n\ncolplot_03\n```\n\n::: {.cell-output-display}\n![](07_ggplot2_intro_files/figure-html/unnamed-chunk-5-3.png){width=672}\n:::\n:::\n\n\n\n\n\n\n## Scatter Plot with Custom Shapes and Line Types\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncorn_data %>%\nggplot(aes(x = nitro, y = yield, color = factor(year))) +\n  geom_point(size = 3, shape = 17) + # Triangle shape\n  geom_smooth(method = \"lm\", se = FALSE, linetype = \"dashed\") +\n  labs(title = \"Yield vs. Nitrogen Levels\", x = \"Nitrogen (kg/ha)\", y = \"Yield (qq/ha)\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](07_ggplot2_intro_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n## BoxPlot with Custom Shapes and Line Types\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncorn_data %>% \nggplot(aes(x = nf, y = yield)) +\n  geom_boxplot(aes(fill = Year), color = \"grey15\", size = 0.5) +\n  geom_jitter(aes(x = nf, y = yield, color=Year), size = 0.1)+\n  scale_fill_brewer(palette=2, type = \"qual\")+\n  scale_color_brewer(palette=2, type = \"qual\")+\n  labs(title = \"Yield vs. Nitrogen Levels\", \n       x = \"Nitrogen (kg/ha)\", y = \"Yield (qq/ha)\") +\n  facet_wrap(~Year)+\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](07_ggplot2_intro_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n# 2. Axis & Titles\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nscatter_plot <- \ncorn_data %>% \nggplot(aes(x = nitro, y = yield, color = topo)) +\n  geom_point()+\n  # Add labels\n  labs(title = \"Yield vs. Nitrogen\", \n       subtitle = \"Data from Las Rosas Trials\", \n       x = \"Nitrogen (kg/ha)\", \n       y = \"Yield (qq/ha)\") +\n  # Add manual color scale\n  scale_color_manual(values = my_colors)+\n  # Modify scale of x-axis\n  scale_x_continuous(limits = c(0,140), breaks = seq(0,150, by=30))+\n  facet_grid(Year~topo)+\n  theme_classic()\n\nscatter_plot\n```\n\n::: {.cell-output-display}\n![](07_ggplot2_intro_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Update\nscatter_plot +\n  # Add regression line\n  geom_smooth()+\n  theme(legend.position = \"none\", # Remove legend\n        # Add panel border\n        panel.border = element_rect(linetype = \"solid\", fill = NA),\n        # Edit axis title text\n        axis.title = element_text(face = \"bold\", color = \"red\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](07_ggplot2_intro_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n:::\n\n\n\n\n\n\n# 3. Annotating text\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolplot_01 +\n  geom_text(aes(label = round(yield_mean,0), x = nf, y = yield_mean + 3))+\n  scale_color_manual(values=my_colors)\n```\n\n::: {.cell-output-display}\n![](07_ggplot2_intro_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n# 4. Adjusting Themes for Presentation\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbase_plot <- ggplot(corn_data, aes(x = nitro, y = yield, color = factor(year))) +\n  geom_point(size = 3) \nbase_plot\n```\n\n::: {.cell-output-display}\n![](07_ggplot2_intro_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\nbase_plot + \n  labs(title = \"Fine-Tuned Yield vs. Nitrogen Plot\") +\n  theme_classic(base_size = 14) + # Larger base font\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](07_ggplot2_intro_files/figure-html/unnamed-chunk-10-2.png){width=672}\n:::\n:::\n\n\n\n\n\n\n# 5. Combining Multiple Plots with Custom Layouts\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- scatter_plot\n\np2 <- histo_02\n\np1 + p2 + plot_layout(ncol = 1)\n```\n\n::: {.cell-output-display}\n![](07_ggplot2_intro_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n# 6. Animated plots\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstatic_plot <-\n  nass_soybean %>% \n  dplyr::filter(state %in% select_states) %>% \n  ggplot(aes(x = year, y = yield)) + \n  geom_point(aes(fill = state, \n                 group = seq_along(year)),\n             color = \"grey15\", shape = 21, size = 2, alpha = 0.5)+\n  scale_fill_manual(values=my_colors)+\n  #scale_color_manual(values=my_colors)+\n  facet_wrap(~state)+\n  theme_classic()+\n  # Add panel border\n  theme(legend.position = \"none\",\n        panel.border = element_rect(linetype = \"solid\", fill = NA))\n\nstatic_plot\n```\n\n::: {.cell-output-display}\n![](07_ggplot2_intro_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n```{.r .cell-code}\nanimated_plot <- \n  static_plot+\n  transition_reveal(year)\n\nanimated_plot\n```\n\n::: {.cell-output-display}\n![](07_ggplot2_intro_files/figure-html/unnamed-chunk-12-1.gif)\n:::\n\n```{.r .cell-code}\n# Render the animation\n# gganimate::animate(animated_plot, fps = 20, duration = 4, \n#                    width = 400, height = 300,\n#         renderer = gifski_renderer())\n\n# Save\n# anim_save(filename = \"animated_plot.gif\", animation = last_animation())\n```\n:::\n\n\n\n\n\n\n# Conclusion\n\nThis tutorial provides various ggplot2 customization techniques relevant to agricultural research. Experiment with different styling options to enhance the clarity and impact of your visualizations!\n\n# Additional Resources for Data Visualization\n\nHere are some excellent resources to deepen your understanding of data visualization:\n\n1. **[ggplot2 Documentation](https://ggplot2.tidyverse.org/)** – The official documentation for ggplot2 with comprehensive guides and examples.\n2. **[R Graphics Cookbook](https://r-graphics.org/)** – A collection of practical recipes for creating a wide variety of graphics with ggplot2.\n3. **[The Grammar of Graphics](https://www.springer.com/gp/book/9780387245447)** by Leland Wilkinson – The foundational theory behind ggplot2.\n4. **[Data Visualization: A Practical Introduction](https://socviz.co/)** by Kieran Healy – An excellent resource for both beginners and advanced users.\n5. **[Tidyverse Tutorials](https://www.tidyverse.org/learn/)** – Tutorials on ggplot2 and related packages in the Tidyverse ecosystem.\n6. **[R Graph Gallery](https://r-graph-gallery.com/)** – A rich gallery of ggplot2 visualizations for inspiration and code snippets.\n\nExplore these resources to expand your visualization skills and stay updated with best practices in data presentation!\n\n",
    "supporting": [
      "07_ggplot2_intro_files/figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}